{"id":"MSse","dependencies":[{"name":"/Users/neo/Workspace/2022/vymo-source-restful/package.json","includedInParent":true,"mtime":1650639339889},{"name":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/react/parser/package.json","includedInParent":true,"mtime":1650476598117},{"name":"../../utilities/globals/index.js","loc":{"line":1,"column":26,"index":26},"parent":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/react/parser/index.js","resolved":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/globals/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DocumentType=void 0,exports.operationName=i,exports.parser=o,exports.verifyDocumentType=a;var n,t=require(\"../../utilities/globals/index.js\");exports.DocumentType=n,function(n){n[n.Query=0]=\"Query\",n[n.Mutation=1]=\"Mutation\",n[n.Subscription=2]=\"Subscription\"}(n||(exports.DocumentType=n={}));var e=new Map;function i(t){var e;switch(t){case n.Query:e=\"Query\";break;case n.Mutation:e=\"Mutation\";break;case n.Subscription:e=\"Subscription\"}return e}function o(i){var o,a,r=e.get(i);if(r)return r;__DEV__?(0,t.invariant)(!!i&&!!i.kind,\"Argument of \".concat(i,\" passed to parser was not a valid GraphQL \")+\"DocumentNode. You may need to use 'graphql-tag' or another method to convert your operation into a document\"):(0,t.invariant)(!!i&&!!i.kind,30);var u=i.definitions.filter(function(n){return\"FragmentDefinition\"===n.kind}),s=i.definitions.filter(function(n){return\"OperationDefinition\"===n.kind&&\"query\"===n.operation}),p=i.definitions.filter(function(n){return\"OperationDefinition\"===n.kind&&\"mutation\"===n.operation}),c=i.definitions.filter(function(n){return\"OperationDefinition\"===n.kind&&\"subscription\"===n.operation});__DEV__?(0,t.invariant)(!u.length||s.length||p.length||c.length,\"Passing only a fragment to 'graphql' is not yet supported. You must include a query, subscription or mutation as well\"):(0,t.invariant)(!u.length||s.length||p.length||c.length,31),__DEV__?(0,t.invariant)(s.length+p.length+c.length<=1,\"react-apollo only supports a query, subscription, or a mutation per HOC. \"+\"\".concat(i,\" had \").concat(s.length,\" queries, \").concat(c.length,\" \")+\"subscriptions and \".concat(p.length,\" mutations. \")+\"You can use 'compose' to join multiple operation types to a component\"):(0,t.invariant)(s.length+p.length+c.length<=1,32),a=s.length?n.Query:n.Mutation,s.length||p.length||(a=n.Subscription);var l=s.length?s:p.length?p:c;__DEV__?(0,t.invariant)(1===l.length,\"react-apollo only supports one definition per HOC. \".concat(i,\" had \")+\"\".concat(l.length,\" definitions. \")+\"You can use 'compose' to join multiple operation types to a component\"):(0,t.invariant)(1===l.length,33);var g=l[0];o=g.variableDefinitions||[];var h={name:g.name&&\"Name\"===g.name.kind?g.name.value:\"data\",type:a,variables:o};return e.set(i,h),h}function a(n,e){var a=o(n),r=i(e),u=i(a.type);__DEV__?(0,t.invariant)(a.type===e,\"Running a \".concat(r,\" requires a graphql \")+\"\".concat(r,\", but a \").concat(u,\" was used instead.\")):(0,t.invariant)(a.type===e,34)}"},"sourceMaps":null,"error":null,"hash":"c9fefe973c08fc5158bc3a1d9793c39f","cacheData":{"env":{}}}
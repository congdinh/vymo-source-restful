{"id":"V1t1","dependencies":[{"name":"/Users/neo/Workspace/2022/vymo-source-restful/package.json","includedInParent":true,"mtime":1650639339889},{"name":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/package.json","includedInParent":true,"mtime":1650476598117},{"name":"../globals/index.js","loc":{"line":1,"column":42,"index":42},"parent":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/graphql/getFromAST.js","resolved":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/globals/index.js"},{"name":"./storeUtils.js","loc":{"line":2,"column":44,"index":109},"parent":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/graphql/getFromAST.js","resolved":"/Users/neo/Workspace/2022/vymo-source-restful/node_modules/@apollo/client/utilities/graphql/storeUtils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.checkDocument=t,exports.getDefaultValues=c,exports.getFragmentDefinition=u,exports.getFragmentDefinitions=a,exports.getMainDefinition=f,exports.getOperationDefinition=e,exports.getOperationName=r,exports.getQueryDefinition=o;var n=require(\"../globals/index.js\"),i=require(\"./storeUtils.js\");function t(i){__DEV__?(0,n.invariant)(i&&\"Document\"===i.kind,'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql'):(0,n.invariant)(i&&\"Document\"===i.kind,44);var t=i.definitions.filter(function(n){return\"FragmentDefinition\"!==n.kind}).map(function(i){if(\"OperationDefinition\"!==i.kind)throw __DEV__?new n.InvariantError('Schema type definitions not allowed in queries. Found: \"'.concat(i.kind,'\"')):new n.InvariantError(45);return i});return __DEV__?(0,n.invariant)(t.length<=1,\"Ambiguous GraphQL document: contains \".concat(t.length,\" operations\")):(0,n.invariant)(t.length<=1,46),i}function e(n){return t(n),n.definitions.filter(function(n){return\"OperationDefinition\"===n.kind})[0]}function r(n){return n.definitions.filter(function(n){return\"OperationDefinition\"===n.kind&&n.name}).map(function(n){return n.name.value})[0]||null}function a(n){return n.definitions.filter(function(n){return\"FragmentDefinition\"===n.kind})}function o(i){var t=e(i);return __DEV__?(0,n.invariant)(t&&\"query\"===t.operation,\"Must contain a query definition.\"):(0,n.invariant)(t&&\"query\"===t.operation,47),t}function u(i){__DEV__?(0,n.invariant)(\"Document\"===i.kind,'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql'):(0,n.invariant)(\"Document\"===i.kind,48),__DEV__?(0,n.invariant)(i.definitions.length<=1,\"Fragment must have exactly one definition.\"):(0,n.invariant)(i.definitions.length<=1,49);var t=i.definitions[0];return __DEV__?(0,n.invariant)(\"FragmentDefinition\"===t.kind,\"Must be a fragment definition.\"):(0,n.invariant)(\"FragmentDefinition\"===t.kind,50),t}function f(i){var e;t(i);for(var r=0,a=i.definitions;r<a.length;r++){var o=a[r];if(\"OperationDefinition\"===o.kind){var u=o.operation;if(\"query\"===u||\"mutation\"===u||\"subscription\"===u)return o}\"FragmentDefinition\"!==o.kind||e||(e=o)}if(e)return e;throw __DEV__?new n.InvariantError(\"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"):new n.InvariantError(51)}function c(n){var t=Object.create(null),e=n&&n.variableDefinitions;return e&&e.length&&e.forEach(function(n){n.defaultValue&&(0,i.valueToObjectRepresentation)(t,n.variable.name,n.defaultValue)}),t}"},"sourceMaps":null,"error":null,"hash":"006e9856b8fa5acf48b68f87876e7bc9","cacheData":{"env":{}}}